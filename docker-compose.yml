version: '3.8'

services:
  # Database
  postgres:
    image: postgres:15-alpine
    container_name: cms_postgres
    environment:
      POSTGRES_USER: cms_user
      POSTGRES_PASSWORD: cms_password
      POSTGRES_DB: cms_db
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - cms_network

  # Minio (S3-compatible object storage)
  minio:
    image: minio/minio:latest
    container_name: cms_minio
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123456
      MINIO_CONSOLE_ADDRESS: :9001
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    networks:
      - cms_network

  # API Service
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
    container_name: cms_api
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DATABASE_URL=postgresql://cms_user:cms_password@postgres:5432/cms_db?schema=public

      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - FRONTEND_URL=http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      - postgres
      - minio
    volumes:
      - ./apps/api:/app
      - /app/node_modules
      - ./uploads:/app/uploads
    networks:
      - cms_network

  # Web Service
  web:
    build:
      context: .
      dockerfile: apps/web/Dockerfile
    container_name: cms_web
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3001
    ports:
      - "3000:3000"
    depends_on:
      - api
    volumes:
      - ./apps/web:/app
      - /app/node_modules
      - /app/.next
    networks:
      - cms_network

volumes:
  postgres_data:
  minio_data:

networks:
  cms_network:
    driver: bridge
